#!Jinja2
# ^ SYNTAX:3.1

# SYNTAX numbering matches the table in https://github.com/cylc/cylc/issues/2752

# SYNTAX: 3.2
# templating code should be displayed differently to cylc code
{# a comment #}  # should display as a comment
{% set foo = "bar" %}
{% set foo = '%s' % 'bar' %}
{% set foo = {"1": 2, "3", []} %}
{% set foo = foo.bar(1, 2, 3) %}
{{ foo_bar }}
{{ foo.bar(1, 2, 3) }}
{{ foo | bar(1, 2, 3) }}
{% include 'foo' %}
{% include ['foo', 'bar'] %}
{% import 'foo' as foo %}
{% from 'foo' import foo as a, b %}

# SYNTAX 3.3
# multi-line template code should appear the same as single-line template code
# if it were distributed over multiple lines
{#
    a comment
#}  # all three lines should display as a single comment with no gaps
{# a
   b
   c #}  # all three lines should display as a single comment with no gaps
{%
    set foo = {"1": 2, "3", []}
%}
{% set foo = {
    "1": 2,
    "3", []} %}


# SYNTAX 3./1.1
# keys, values and sections outside of the templating code should display
# as normal
a = {{ b }} c
a = b_{{ c }} sdsd
a = """
    b c_{{ d }}
"""
{{ a }} = b
{{ a }} b = c
a_{{ b }}_c = d
a = {{ b + 1 }}
a = {{ b_b | c.d('1', "2", 3) }}
[[{{ a }}]]
    d = e  # check highlighting of this line un-affected by section
[[{{ a_a | c.d('1', "2", 3) }}]]
    d = e  # check highlighting of this line un-affected by section
[[a{{ b }}c]]
    d = e  # check highlighting of this line un-affected by section
[[{{ "%(foo)s" % {"foo": "abc"}}}]]
    d = e  # check highlighting of this line un-affected by section

# SYNTAX 3./1.2
# comments outside of the templating code should display as normal
{# foo #}  # foo
{% foo %}  # foo
{{ foo }}  # foo

# SYNTAX 3./1.3
# tasks and deps outside of the templating code should display as normal
[[graph]]
R1 = """
    foo => {{ bar }} => qux
    foo => {{ b_ar | baz.pub('1', "2", 3) }} => qux =>
{% if BAR %}
    bar => pub
{% else %}
    baz => pub
{% endif %}
"""

# Others:
[other section]
%include {{ meow }}

{{ lots }} {{ of }} {{ them }} = foo

graph = """
    # polling:
    poller<{{ otherSuite }}::foo> => bar
    poller<other-{{ suite }}::foo> => bar
    poller<other-{{ suite }}-but-{{ wait theres more }}::foo:fail> => bar
    poller<oops suite::foo> => bar
    # xtrigger:
    @thing_{{ foo }} => bar
    # parameterization:
    foo<{{ bar }}> =>  baz
    foo<bar={{ qux }}> =>  baz
    <{{ qux }}+1> => bar
    # qualifier:
    foo:{{ qual }} => bar
    foo:custom_{{ qual }} => bar
    {{ task }}:fail => bar
"""

# whitespace control:
{%+ if something %}yay{% endif %}
{% for item in seq -%}
    {{ item }}
{%- endfor %}
